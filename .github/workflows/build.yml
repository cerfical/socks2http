name: Build
on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Install dependencies
        run: go mod download

      - name: Build and archive
        shell: bash
        run: |
          arch=$(go env GOARCH)
          system=$(go env GOOS)
          platform=${arch}-${system}

          echo "Building for ${platform}"

          mkdir build && cd build
          for cmd in ../cmd/*/; do
            cmd_name=$(basename "$cmd")
            echo Building ${cmd_name}

            # Let go build decide on executable name and extension
            go build ${cmd}
          done
          cd ..

          mkdir dist

          output_file="app-${platform}"
          case "$system" in
          *win*)
            echo Creating ${output_file}.zip
            7z a "./dist/${output_file}.zip" ./build/*
            ;;
          *linux*)
            echo Creating ${output_file}.tar.gz
            cd build && tar -vczf "../dist/${output_file}.tar.gz" *
            ;;
          *)
            echo Unknown platform: ${platform}
            exit 1
            ;;
          esac

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: ./dist/**/*

  release-please:
    name: Release Please
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write # Open and update pull requests
      issues: write # Create labels

      contents: write # Create releases

    outputs:
      release-created: ${{ steps.release.outputs.release_created }}
      version-tag: ${{ steps.release.outputs.tag_name }}

    steps:
      - id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: go

  release:
    name: Publish Release
    if: ${{ needs.release-please.outputs.release-created }}
    needs: [release-please, build]
    runs-on: ubuntu-latest

    permissions:
      contents: write # Update releases

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist/
          merge-multiple: true
      - name: Upload release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: gh release upload ${{ needs.release-please.outputs.version-tag }} ./dist/*
